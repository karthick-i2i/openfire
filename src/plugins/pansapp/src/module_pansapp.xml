<?xml version="1.0" encoding="UTF-8"?>
<project name="module_restapi" default="compile.module.restapi">
  <dirname property="module.restapi.basedir" file="${ant.file.module_restapi}"/>
  
  <property name="module.jdk.home.restapi" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.restapi" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.restapi" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.pansapp" value="${compiler.args}"/>
  
  <property name="pansapp.output.dir" value="${module.pansapp.basedir}/../../../../out/production/pansapp"/>
  <property name="pansapp.testoutput.dir" value="${module.pansapp.basedir}/../../../../out/test/pansapp"/>
  
  <path id="pansapp.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="pansapp.module.production.classpath">
    <path refid="${module.jdk.classpath.pansapp}"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.lib13.classpath"/>
    <path refid="library.lib8.classpath"/>
    <path refid="library.lib14.classpath"/>
    <path refid="library.merge.classpath"/>
    <path refid="library.lib7.classpath"/>
    <path refid="library.lib4.classpath"/>
    <path refid="library.lib6.classpath"/>
    <pathelement location="${test.output.dir}"/>
    <pathelement location="${openfire.output.dir}"/>
  </path>
  
  <path id="pansapp.runtime.production.module.classpath">
    <pathelement location="${pansapp.output.dir}"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.lib13.classpath"/>
    <path refid="library.lib8.classpath"/>
    <path refid="library.lib14.classpath"/>
    <path refid="library.merge.classpath"/>
    <path refid="library.lib7.classpath"/>
    <path refid="library.lib4.classpath"/>
    <path refid="library.lib6.classpath"/>
    <path refid="test.runtime.production.module.classpath"/>
    <path refid="openfire.runtime.production.module.classpath"/>
  </path>
  
  <path id="pansapp.module.classpath">
    <path refid="${module.jdk.classpath.pansapp}"/>
    <pathelement location="${pansapp.output.dir}"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.lib13.classpath"/>
    <path refid="library.lib8.classpath"/>
    <path refid="library.lib14.classpath"/>
    <path refid="library.merge.classpath"/>
    <path refid="library.lib7.classpath"/>
    <path refid="library.lib4.classpath"/>
    <path refid="library.lib6.classpath"/>
    <pathelement location="${test.testoutput.dir}"/>
    <pathelement location="${test.output.dir}"/>
    <pathelement location="${openfire.testoutput.dir}"/>
    <pathelement location="${openfire.output.dir}"/>
  </path>
  
  <path id="pansapp.runtime.module.classpath">
    <pathelement location="${pansapp.testoutput.dir}"/>
    <pathelement location="${pansapp.output.dir}"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.lib13.classpath"/>
    <path refid="library.lib8.classpath"/>
    <path refid="library.lib14.classpath"/>
    <path refid="library.merge.classpath"/>
    <path refid="library.lib7.classpath"/>
    <path refid="library.lib4.classpath"/>
    <path refid="library.lib6.classpath"/>
    <path refid="test.runtime.module.classpath"/>
    <path refid="openfire.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.pansapp">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.pansapp">
    <patternset refid="excluded.from.module.pansapp"/>
  </patternset>
  
  <path id="pansapp.module.sourcepath">
    <dirset dir="${module.pansapp.basedir}">
      <include name="java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.pansapp" depends="compile.module.pansapp.production,compile.module.pansapp.tests" description="Compile module pansapp"/>
  
  <target name="compile.module.pansapp.production" depends="register.custom.compilers,compile.module.test,compile.module.openfire" description="Compile module pansapp; production classes">
    <mkdir dir="${pansapp.output.dir}"/>
    <javac2 destdir="${pansapp.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.pansapp}/javac">
      <compilerarg line="${compiler.args.pansapp}"/>
      <bootclasspath refid="pansapp.module.bootclasspath"/>
      <classpath refid="pansapp.module.production.classpath"/>
      <src refid="pansapp.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.pansapp"/>
    </javac2>
    
    <copy todir="${pansapp.output.dir}">
      <fileset dir="${module.pansapp.basedir}/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.pansapp.tests" depends="register.custom.compilers,compile.module.pansapp.production" description="compile module pansapp; test classes" unless="skip.tests"/>
  
  <target name="clean.module.pansapp" description="cleanup module">
    <delete dir="${pansapp.output.dir}"/>
    <delete dir="${pansapp.testoutput.dir}"/>
  </target>
</project>
